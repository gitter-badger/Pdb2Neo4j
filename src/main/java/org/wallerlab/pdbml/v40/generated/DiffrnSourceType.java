//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7-b41 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.22 at 05:23:04 PM EST 
//


package org.wallerlab.pdbml.v40.generated;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;


/**
 * 
 * Data items in the DIFFRN_SOURCE category record details of
 * the source of radiation used in the diffraction experiment.
 * 
 *     Example 1 - based on PDB entry 5HVP and laboratory records for the
 *                 structure corresponding to PDB entry 5HVP.
 * <PDBx:diffrn_sourceCategory>
 *    <PDBx:diffrn_source diffrn_id="s1">
 *       <PDBx:current>180</PDBx:current>
 *       <PDBx:power>50</PDBx:power>
 *       <PDBx:size>8mm x 0.4 mm broad-focus</PDBx:size>
 *       <PDBx:source>rotating anode</PDBx:source>
 *       <PDBx:type>Rigaku RU-200</PDBx:type>
 *    </PDBx:diffrn_source>
 * </PDBx:diffrn_sourceCategory>
 * 
 * 
 *          
 * 
 * <p>Java class for diffrn_sourceType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="diffrn_sourceType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="diffrn_source" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;all>
 *                   &lt;element name="current" minOccurs="0">
 *                     &lt;complexType>
 *                       &lt;simpleContent>
 *                         &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>decimal">
 *                           &lt;attribute name="units" type="{http://www.w3.org/2001/XMLSchema}string" fixed="milliamperes" />
 *                         &lt;/extension>
 *                       &lt;/simpleContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="details" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="pdbx_synchrotron_beamline" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="pdbx_synchrotron_site" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="pdbx_wavelength" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="pdbx_wavelength_list" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="power" minOccurs="0">
 *                     &lt;complexType>
 *                       &lt;simpleContent>
 *                         &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>decimal">
 *                           &lt;attribute name="units" type="{http://www.w3.org/2001/XMLSchema}string" fixed="kilowatts" />
 *                         &lt;/extension>
 *                       &lt;/simpleContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="size" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="source" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="take-off_angle" minOccurs="0">
 *                     &lt;simpleType>
 *                       &lt;union>
 *                         &lt;simpleType>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *                             &lt;minInclusive value="0.00"/>
 *                             &lt;maxInclusive value="0.00"/>
 *                           &lt;/restriction>
 *                         &lt;/simpleType>
 *                         &lt;simpleType>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *                             &lt;minExclusive value="0.00"/>
 *                             &lt;maxExclusive value="90.0"/>
 *                           &lt;/restriction>
 *                         &lt;/simpleType>
 *                         &lt;simpleType>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *                             &lt;minInclusive value="90.0"/>
 *                             &lt;maxInclusive value="90.0"/>
 *                           &lt;/restriction>
 *                         &lt;/simpleType>
 *                       &lt;/union>
 *                     &lt;/simpleType>
 *                   &lt;/element>
 *                   &lt;element name="target" minOccurs="0">
 *                     &lt;simpleType>
 *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                         &lt;enumeration value="H"/>
 *                         &lt;enumeration value="He"/>
 *                         &lt;enumeration value="Li"/>
 *                         &lt;enumeration value="Be"/>
 *                         &lt;enumeration value="B"/>
 *                         &lt;enumeration value="C"/>
 *                         &lt;enumeration value="N"/>
 *                         &lt;enumeration value="O"/>
 *                         &lt;enumeration value="F"/>
 *                         &lt;enumeration value="Ne"/>
 *                         &lt;enumeration value="Na"/>
 *                         &lt;enumeration value="Mg"/>
 *                         &lt;enumeration value="Al"/>
 *                         &lt;enumeration value="Si"/>
 *                         &lt;enumeration value="P"/>
 *                         &lt;enumeration value="S"/>
 *                         &lt;enumeration value="Cl"/>
 *                         &lt;enumeration value="Ar"/>
 *                         &lt;enumeration value="K"/>
 *                         &lt;enumeration value="Ca"/>
 *                         &lt;enumeration value="Sc"/>
 *                         &lt;enumeration value="Ti"/>
 *                         &lt;enumeration value="V"/>
 *                         &lt;enumeration value="Cr"/>
 *                         &lt;enumeration value="Mn"/>
 *                         &lt;enumeration value="Fe"/>
 *                         &lt;enumeration value="Co"/>
 *                         &lt;enumeration value="Ni"/>
 *                         &lt;enumeration value="Cu"/>
 *                         &lt;enumeration value="Zn"/>
 *                         &lt;enumeration value="Ga"/>
 *                         &lt;enumeration value="Ge"/>
 *                         &lt;enumeration value="As"/>
 *                         &lt;enumeration value="Se"/>
 *                         &lt;enumeration value="Br"/>
 *                         &lt;enumeration value="Kr"/>
 *                         &lt;enumeration value="Rb"/>
 *                         &lt;enumeration value="Sr"/>
 *                         &lt;enumeration value="Y"/>
 *                         &lt;enumeration value="Zr"/>
 *                         &lt;enumeration value="Nb"/>
 *                         &lt;enumeration value="Mo"/>
 *                         &lt;enumeration value="Tc"/>
 *                         &lt;enumeration value="Ru"/>
 *                         &lt;enumeration value="Rh"/>
 *                         &lt;enumeration value="Pd"/>
 *                         &lt;enumeration value="Ag"/>
 *                         &lt;enumeration value="Cd"/>
 *                         &lt;enumeration value="In"/>
 *                         &lt;enumeration value="Sn"/>
 *                         &lt;enumeration value="Sb"/>
 *                         &lt;enumeration value="Te"/>
 *                         &lt;enumeration value="I"/>
 *                         &lt;enumeration value="Xe"/>
 *                         &lt;enumeration value="Cs"/>
 *                         &lt;enumeration value="Ba"/>
 *                         &lt;enumeration value="La"/>
 *                         &lt;enumeration value="Ce"/>
 *                         &lt;enumeration value="Pr"/>
 *                         &lt;enumeration value="Nd"/>
 *                         &lt;enumeration value="Pm"/>
 *                         &lt;enumeration value="Sm"/>
 *                         &lt;enumeration value="Eu"/>
 *                         &lt;enumeration value="Gd"/>
 *                         &lt;enumeration value="Tb"/>
 *                         &lt;enumeration value="Dy"/>
 *                         &lt;enumeration value="Ho"/>
 *                         &lt;enumeration value="Er"/>
 *                         &lt;enumeration value="Tm"/>
 *                         &lt;enumeration value="Yb"/>
 *                         &lt;enumeration value="Lu"/>
 *                         &lt;enumeration value="Hf"/>
 *                         &lt;enumeration value="Ta"/>
 *                         &lt;enumeration value="W"/>
 *                         &lt;enumeration value="Re"/>
 *                         &lt;enumeration value="Os"/>
 *                         &lt;enumeration value="Ir"/>
 *                         &lt;enumeration value="Pt"/>
 *                         &lt;enumeration value="Au"/>
 *                         &lt;enumeration value="Hg"/>
 *                         &lt;enumeration value="Tl"/>
 *                         &lt;enumeration value="Pb"/>
 *                         &lt;enumeration value="Bi"/>
 *                         &lt;enumeration value="Po"/>
 *                         &lt;enumeration value="At"/>
 *                         &lt;enumeration value="Rn"/>
 *                         &lt;enumeration value="Fr"/>
 *                         &lt;enumeration value="Ra"/>
 *                         &lt;enumeration value="Ac"/>
 *                         &lt;enumeration value="Th"/>
 *                         &lt;enumeration value="Pa"/>
 *                         &lt;enumeration value="U"/>
 *                         &lt;enumeration value="Np"/>
 *                         &lt;enumeration value="Pu"/>
 *                         &lt;enumeration value="Am"/>
 *                         &lt;enumeration value="Cm"/>
 *                         &lt;enumeration value="Bk"/>
 *                         &lt;enumeration value="Cf"/>
 *                         &lt;enumeration value="Es"/>
 *                         &lt;enumeration value="Fm"/>
 *                         &lt;enumeration value="Md"/>
 *                         &lt;enumeration value="No"/>
 *                         &lt;enumeration value="Lr"/>
 *                       &lt;/restriction>
 *                     &lt;/simpleType>
 *                   &lt;/element>
 *                   &lt;element name="type" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *                   &lt;element name="voltage" minOccurs="0">
 *                     &lt;complexType>
 *                       &lt;simpleContent>
 *                         &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>decimal">
 *                           &lt;attribute name="units" type="{http://www.w3.org/2001/XMLSchema}string" fixed="kilovolts" />
 *                         &lt;/extension>
 *                       &lt;/simpleContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/all>
 *                 &lt;attribute name="diffrn_id" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "diffrn_sourceType", propOrder = {
    "diffrnSource"
})
public class DiffrnSourceType {

    @XmlElement(name = "diffrn_source")
    protected List<DiffrnSourceType.DiffrnSource> diffrnSource;

    /**
     * Gets the value of the diffrnSource property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the diffrnSource property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDiffrnSource().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DiffrnSourceType.DiffrnSource }
     * 
     * 
     */
    public List<DiffrnSourceType.DiffrnSource> getDiffrnSource() {
        if (diffrnSource == null) {
            diffrnSource = new ArrayList<DiffrnSourceType.DiffrnSource>();
        }
        return this.diffrnSource;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;all>
     *         &lt;element name="current" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>decimal">
     *                 &lt;attribute name="units" type="{http://www.w3.org/2001/XMLSchema}string" fixed="milliamperes" />
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="details" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="pdbx_synchrotron_beamline" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="pdbx_synchrotron_site" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="pdbx_wavelength" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="pdbx_wavelength_list" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="power" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>decimal">
     *                 &lt;attribute name="units" type="{http://www.w3.org/2001/XMLSchema}string" fixed="kilowatts" />
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="size" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="source" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="take-off_angle" minOccurs="0">
     *           &lt;simpleType>
     *             &lt;union>
     *               &lt;simpleType>
     *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
     *                   &lt;minInclusive value="0.00"/>
     *                   &lt;maxInclusive value="0.00"/>
     *                 &lt;/restriction>
     *               &lt;/simpleType>
     *               &lt;simpleType>
     *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
     *                   &lt;minExclusive value="0.00"/>
     *                   &lt;maxExclusive value="90.0"/>
     *                 &lt;/restriction>
     *               &lt;/simpleType>
     *               &lt;simpleType>
     *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
     *                   &lt;minInclusive value="90.0"/>
     *                   &lt;maxInclusive value="90.0"/>
     *                 &lt;/restriction>
     *               &lt;/simpleType>
     *             &lt;/union>
     *           &lt;/simpleType>
     *         &lt;/element>
     *         &lt;element name="target" minOccurs="0">
     *           &lt;simpleType>
     *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *               &lt;enumeration value="H"/>
     *               &lt;enumeration value="He"/>
     *               &lt;enumeration value="Li"/>
     *               &lt;enumeration value="Be"/>
     *               &lt;enumeration value="B"/>
     *               &lt;enumeration value="C"/>
     *               &lt;enumeration value="N"/>
     *               &lt;enumeration value="O"/>
     *               &lt;enumeration value="F"/>
     *               &lt;enumeration value="Ne"/>
     *               &lt;enumeration value="Na"/>
     *               &lt;enumeration value="Mg"/>
     *               &lt;enumeration value="Al"/>
     *               &lt;enumeration value="Si"/>
     *               &lt;enumeration value="P"/>
     *               &lt;enumeration value="S"/>
     *               &lt;enumeration value="Cl"/>
     *               &lt;enumeration value="Ar"/>
     *               &lt;enumeration value="K"/>
     *               &lt;enumeration value="Ca"/>
     *               &lt;enumeration value="Sc"/>
     *               &lt;enumeration value="Ti"/>
     *               &lt;enumeration value="V"/>
     *               &lt;enumeration value="Cr"/>
     *               &lt;enumeration value="Mn"/>
     *               &lt;enumeration value="Fe"/>
     *               &lt;enumeration value="Co"/>
     *               &lt;enumeration value="Ni"/>
     *               &lt;enumeration value="Cu"/>
     *               &lt;enumeration value="Zn"/>
     *               &lt;enumeration value="Ga"/>
     *               &lt;enumeration value="Ge"/>
     *               &lt;enumeration value="As"/>
     *               &lt;enumeration value="Se"/>
     *               &lt;enumeration value="Br"/>
     *               &lt;enumeration value="Kr"/>
     *               &lt;enumeration value="Rb"/>
     *               &lt;enumeration value="Sr"/>
     *               &lt;enumeration value="Y"/>
     *               &lt;enumeration value="Zr"/>
     *               &lt;enumeration value="Nb"/>
     *               &lt;enumeration value="Mo"/>
     *               &lt;enumeration value="Tc"/>
     *               &lt;enumeration value="Ru"/>
     *               &lt;enumeration value="Rh"/>
     *               &lt;enumeration value="Pd"/>
     *               &lt;enumeration value="Ag"/>
     *               &lt;enumeration value="Cd"/>
     *               &lt;enumeration value="In"/>
     *               &lt;enumeration value="Sn"/>
     *               &lt;enumeration value="Sb"/>
     *               &lt;enumeration value="Te"/>
     *               &lt;enumeration value="I"/>
     *               &lt;enumeration value="Xe"/>
     *               &lt;enumeration value="Cs"/>
     *               &lt;enumeration value="Ba"/>
     *               &lt;enumeration value="La"/>
     *               &lt;enumeration value="Ce"/>
     *               &lt;enumeration value="Pr"/>
     *               &lt;enumeration value="Nd"/>
     *               &lt;enumeration value="Pm"/>
     *               &lt;enumeration value="Sm"/>
     *               &lt;enumeration value="Eu"/>
     *               &lt;enumeration value="Gd"/>
     *               &lt;enumeration value="Tb"/>
     *               &lt;enumeration value="Dy"/>
     *               &lt;enumeration value="Ho"/>
     *               &lt;enumeration value="Er"/>
     *               &lt;enumeration value="Tm"/>
     *               &lt;enumeration value="Yb"/>
     *               &lt;enumeration value="Lu"/>
     *               &lt;enumeration value="Hf"/>
     *               &lt;enumeration value="Ta"/>
     *               &lt;enumeration value="W"/>
     *               &lt;enumeration value="Re"/>
     *               &lt;enumeration value="Os"/>
     *               &lt;enumeration value="Ir"/>
     *               &lt;enumeration value="Pt"/>
     *               &lt;enumeration value="Au"/>
     *               &lt;enumeration value="Hg"/>
     *               &lt;enumeration value="Tl"/>
     *               &lt;enumeration value="Pb"/>
     *               &lt;enumeration value="Bi"/>
     *               &lt;enumeration value="Po"/>
     *               &lt;enumeration value="At"/>
     *               &lt;enumeration value="Rn"/>
     *               &lt;enumeration value="Fr"/>
     *               &lt;enumeration value="Ra"/>
     *               &lt;enumeration value="Ac"/>
     *               &lt;enumeration value="Th"/>
     *               &lt;enumeration value="Pa"/>
     *               &lt;enumeration value="U"/>
     *               &lt;enumeration value="Np"/>
     *               &lt;enumeration value="Pu"/>
     *               &lt;enumeration value="Am"/>
     *               &lt;enumeration value="Cm"/>
     *               &lt;enumeration value="Bk"/>
     *               &lt;enumeration value="Cf"/>
     *               &lt;enumeration value="Es"/>
     *               &lt;enumeration value="Fm"/>
     *               &lt;enumeration value="Md"/>
     *               &lt;enumeration value="No"/>
     *               &lt;enumeration value="Lr"/>
     *             &lt;/restriction>
     *           &lt;/simpleType>
     *         &lt;/element>
     *         &lt;element name="type" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
     *         &lt;element name="voltage" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>decimal">
     *                 &lt;attribute name="units" type="{http://www.w3.org/2001/XMLSchema}string" fixed="kilovolts" />
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/all>
     *       &lt;attribute name="diffrn_id" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {

    })
    public static class DiffrnSource {

        @XmlElementRef(name = "current", namespace = "http://pdbml.pdb.org/schema/pdbx-v40.xsd", type = JAXBElement.class, required = false)
        protected JAXBElement<DiffrnSourceType.DiffrnSource.Current> current;
        @XmlElementRef(name = "details", namespace = "http://pdbml.pdb.org/schema/pdbx-v40.xsd", type = JAXBElement.class, required = false)
        protected JAXBElement<String> details;
        @XmlElementRef(name = "pdbx_synchrotron_beamline", namespace = "http://pdbml.pdb.org/schema/pdbx-v40.xsd", type = JAXBElement.class, required = false)
        protected JAXBElement<String> pdbxSynchrotronBeamline;
        @XmlElementRef(name = "pdbx_synchrotron_site", namespace = "http://pdbml.pdb.org/schema/pdbx-v40.xsd", type = JAXBElement.class, required = false)
        protected JAXBElement<String> pdbxSynchrotronSite;
        @XmlElementRef(name = "pdbx_wavelength", namespace = "http://pdbml.pdb.org/schema/pdbx-v40.xsd", type = JAXBElement.class, required = false)
        protected JAXBElement<String> pdbxWavelength;
        @XmlElementRef(name = "pdbx_wavelength_list", namespace = "http://pdbml.pdb.org/schema/pdbx-v40.xsd", type = JAXBElement.class, required = false)
        protected JAXBElement<String> pdbxWavelengthList;
        @XmlElementRef(name = "power", namespace = "http://pdbml.pdb.org/schema/pdbx-v40.xsd", type = JAXBElement.class, required = false)
        protected JAXBElement<DiffrnSourceType.DiffrnSource.Power> power;
        @XmlElementRef(name = "size", namespace = "http://pdbml.pdb.org/schema/pdbx-v40.xsd", type = JAXBElement.class, required = false)
        protected JAXBElement<String> size;
        @XmlElementRef(name = "source", namespace = "http://pdbml.pdb.org/schema/pdbx-v40.xsd", type = JAXBElement.class, required = false)
        protected JAXBElement<String> source;
        @XmlElementRef(name = "take-off_angle", namespace = "http://pdbml.pdb.org/schema/pdbx-v40.xsd", type = JAXBElement.class, required = false)
        protected JAXBElement<String> takeOffAngle;
        @XmlElementRef(name = "target", namespace = "http://pdbml.pdb.org/schema/pdbx-v40.xsd", type = JAXBElement.class, required = false)
        protected JAXBElement<String> target;
        @XmlElementRef(name = "type", namespace = "http://pdbml.pdb.org/schema/pdbx-v40.xsd", type = JAXBElement.class, required = false)
        protected JAXBElement<String> type;
        @XmlElementRef(name = "voltage", namespace = "http://pdbml.pdb.org/schema/pdbx-v40.xsd", type = JAXBElement.class, required = false)
        protected JAXBElement<DiffrnSourceType.DiffrnSource.Voltage> voltage;
        @XmlAttribute(name = "diffrn_id", required = true)
        protected String diffrnId;

        /**
         * Gets the value of the current property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link DiffrnSourceType.DiffrnSource.Current }{@code >}
         *     
         */
        public JAXBElement<DiffrnSourceType.DiffrnSource.Current> getCurrent() {
            return current;
        }

        /**
         * Sets the value of the current property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link DiffrnSourceType.DiffrnSource.Current }{@code >}
         *     
         */
        public void setCurrent(JAXBElement<DiffrnSourceType.DiffrnSource.Current> value) {
            this.current = value;
        }

        /**
         * Gets the value of the details property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public JAXBElement<String> getDetails() {
            return details;
        }

        /**
         * Sets the value of the details property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public void setDetails(JAXBElement<String> value) {
            this.details = value;
        }

        /**
         * Gets the value of the pdbxSynchrotronBeamline property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public JAXBElement<String> getPdbxSynchrotronBeamline() {
            return pdbxSynchrotronBeamline;
        }

        /**
         * Sets the value of the pdbxSynchrotronBeamline property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public void setPdbxSynchrotronBeamline(JAXBElement<String> value) {
            this.pdbxSynchrotronBeamline = value;
        }

        /**
         * Gets the value of the pdbxSynchrotronSite property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public JAXBElement<String> getPdbxSynchrotronSite() {
            return pdbxSynchrotronSite;
        }

        /**
         * Sets the value of the pdbxSynchrotronSite property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public void setPdbxSynchrotronSite(JAXBElement<String> value) {
            this.pdbxSynchrotronSite = value;
        }

        /**
         * Gets the value of the pdbxWavelength property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public JAXBElement<String> getPdbxWavelength() {
            return pdbxWavelength;
        }

        /**
         * Sets the value of the pdbxWavelength property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public void setPdbxWavelength(JAXBElement<String> value) {
            this.pdbxWavelength = value;
        }

        /**
         * Gets the value of the pdbxWavelengthList property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public JAXBElement<String> getPdbxWavelengthList() {
            return pdbxWavelengthList;
        }

        /**
         * Sets the value of the pdbxWavelengthList property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public void setPdbxWavelengthList(JAXBElement<String> value) {
            this.pdbxWavelengthList = value;
        }

        /**
         * Gets the value of the power property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link DiffrnSourceType.DiffrnSource.Power }{@code >}
         *     
         */
        public JAXBElement<DiffrnSourceType.DiffrnSource.Power> getPower() {
            return power;
        }

        /**
         * Sets the value of the power property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link DiffrnSourceType.DiffrnSource.Power }{@code >}
         *     
         */
        public void setPower(JAXBElement<DiffrnSourceType.DiffrnSource.Power> value) {
            this.power = value;
        }

        /**
         * Gets the value of the size property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public JAXBElement<String> getSize() {
            return size;
        }

        /**
         * Sets the value of the size property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public void setSize(JAXBElement<String> value) {
            this.size = value;
        }

        /**
         * Gets the value of the source property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public JAXBElement<String> getSource() {
            return source;
        }

        /**
         * Sets the value of the source property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public void setSource(JAXBElement<String> value) {
            this.source = value;
        }

        /**
         * Gets the value of the takeOffAngle property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public JAXBElement<String> getTakeOffAngle() {
            return takeOffAngle;
        }

        /**
         * Sets the value of the takeOffAngle property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public void setTakeOffAngle(JAXBElement<String> value) {
            this.takeOffAngle = value;
        }

        /**
         * Gets the value of the target property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public JAXBElement<String> getTarget() {
            return target;
        }

        /**
         * Sets the value of the target property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public void setTarget(JAXBElement<String> value) {
            this.target = value;
        }

        /**
         * Gets the value of the type property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public JAXBElement<String> getType() {
            return type;
        }

        /**
         * Sets the value of the type property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     
         */
        public void setType(JAXBElement<String> value) {
            this.type = value;
        }

        /**
         * Gets the value of the voltage property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link DiffrnSourceType.DiffrnSource.Voltage }{@code >}
         *     
         */
        public JAXBElement<DiffrnSourceType.DiffrnSource.Voltage> getVoltage() {
            return voltage;
        }

        /**
         * Sets the value of the voltage property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link DiffrnSourceType.DiffrnSource.Voltage }{@code >}
         *     
         */
        public void setVoltage(JAXBElement<DiffrnSourceType.DiffrnSource.Voltage> value) {
            this.voltage = value;
        }

        /**
         * Gets the value of the diffrnId property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDiffrnId() {
            return diffrnId;
        }

        /**
         * Sets the value of the diffrnId property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDiffrnId(String value) {
            this.diffrnId = value;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>decimal">
         *       &lt;attribute name="units" type="{http://www.w3.org/2001/XMLSchema}string" fixed="milliamperes" />
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class Current {

            @XmlValue
            protected BigDecimal value;
            @XmlAttribute(name = "units")
            protected String units;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link BigDecimal }
             *     
             */
            public BigDecimal getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link BigDecimal }
             *     
             */
            public void setValue(BigDecimal value) {
                this.value = value;
            }

            /**
             * Gets the value of the units property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getUnits() {
                if (units == null) {
                    return "milliamperes";
                } else {
                    return units;
                }
            }

            /**
             * Sets the value of the units property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setUnits(String value) {
                this.units = value;
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>decimal">
         *       &lt;attribute name="units" type="{http://www.w3.org/2001/XMLSchema}string" fixed="kilowatts" />
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class Power {

            @XmlValue
            protected BigDecimal value;
            @XmlAttribute(name = "units")
            protected String units;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link BigDecimal }
             *     
             */
            public BigDecimal getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link BigDecimal }
             *     
             */
            public void setValue(BigDecimal value) {
                this.value = value;
            }

            /**
             * Gets the value of the units property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getUnits() {
                if (units == null) {
                    return "kilowatts";
                } else {
                    return units;
                }
            }

            /**
             * Sets the value of the units property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setUnits(String value) {
                this.units = value;
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>decimal">
         *       &lt;attribute name="units" type="{http://www.w3.org/2001/XMLSchema}string" fixed="kilovolts" />
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class Voltage {

            @XmlValue
            protected BigDecimal value;
            @XmlAttribute(name = "units")
            protected String units;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link BigDecimal }
             *     
             */
            public BigDecimal getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link BigDecimal }
             *     
             */
            public void setValue(BigDecimal value) {
                this.value = value;
            }

            /**
             * Gets the value of the units property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getUnits() {
                if (units == null) {
                    return "kilovolts";
                } else {
                    return units;
                }
            }

            /**
             * Sets the value of the units property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setUnits(String value) {
                this.units = value;
            }

        }

    }

}
