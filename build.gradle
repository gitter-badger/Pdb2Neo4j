buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3"

    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

jar {
    baseName = 'Pdb2Neo4j'
    version =  '0.0.1'
}

repositories {
    mavenCentral()
	maven { url "https://m2.neo4j.org" }
	maven { url "https://repo.spring.io/libs-release" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	compile 'org.springframework:spring-oxm:4.2.5.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter'
	compile 'org.springframework.batch:spring-batch-integration:3.0.6.RELEASE'
	compile 'org.springframework.boot:spring-boot-starter-batch'
	compile group: 'org.springframework.data', name: 'spring-data-neo4j', version: '4.1.1.RELEASE'
	
	compile 'org.hibernate:hibernate-validator'
    testCompile("junit:junit")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}

task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
    dependsOn = subprojects.test
    additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(sourceSets.main.allSource.srcDirs)
    classDirectories = files(sourceSets.main.output)
    executionData = files(jacocoTestReport.executionData)
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
    onlyIf = {
        true
    }
    doFirst {
        executionData = files(executionData.findAll {
            it.exists()
        })
    }

  afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/xml_cml/**'])
            })
    }
}

coveralls {
  sourceDirs = subprojects.sourceSets.main.allSource.srcDirs.flatten()
  jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

