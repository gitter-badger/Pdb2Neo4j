buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3"
        classpath 'io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE'
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'com.bmuschko.nexus'

group = "org.wallerlab"
version = '0.0.1'
description= 'Pdb2Neo4j'

repositories {
    mavenCentral()
	maven { url "https://m2.neo4j.org" }
	maven { url "https://repo.spring.io/libs-release" }
    maven { url "https://repo.spring.io/libs-snapshot" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:2.0.6.RELEASE'
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-batch'
    compile 'org.springframework.batch:spring-batch-integration'
    compile 'org.springframework:spring-oxm'
    compile 'org.springframework.data:spring-data-neo4j:4.2.0.BUILD-SNAPSHOT'

    compile group: 'org.neo4j', name: 'neo4j-ogm-core', version: '2.0.4'
    compile 'org.neo4j:neo4j-ogm-embedded-driver:2.0.4'
    compile group: 'org.neo4j', name: 'neo4j-ogm-http-driver', version: '2.0.4'

    compile 'org.hibernate:hibernate-validator'
    compile 'org.neo4j:neo4j:3.1.0-M05'

    //This is to allow mocking concrete classes
    compile 'cglib:cglib-nodep:3.2.4'
    compile 'org.objenesis:objenesis:2.4'

    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4-rc-1'
    testCompile 'org.springframework:spring-test'
    testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4-rc-1'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.7'
    testCompile 'junit:junit:4.12'
}

sourceSets {
    integTest {
        groovy {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integTest/groovy')
        }
        resources.srcDir file('src/integTest/resources')
    }
}

configurations {
    integTestCompile.extendsFrom testCompile
    integTestRuntime.extendsFrom testRuntime
}

task integTest(type: Test) {
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/pdbml/**'])
        })
    }
}

coveralls {
  sourceDirs = subprojects.sourceSets.main.allSource.srcDirs.flatten()
  jacocoReportPath = "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
}


task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}

modifyPom {
    project {
        name 'Pdb2Neo4j'
        description 'bootstrap neo4j database from PDB.'
        url 'https://github.com/bmuschko/gradle-nexus-plugin'
        inceptionYear '2012'

        scm {
            url 'https://github.com/wallerlab/Pdb2Neo4j'
            connection 'scm:https://github.com/wallerlab/Pdb2Neo4j.git'
            developerConnection 'scm:git://github.com/wallerlab/Pdb2Neo4j.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'wallerlab'
                name 'wallerlab'
                email 'wallerlab@protonmail.com'
            }
        }
    }
}

extraArchive {
    sources = true
    tests = true
    javadoc = true
}

nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
}

